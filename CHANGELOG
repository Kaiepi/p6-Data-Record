Revision history for Data::Record

v0.0.1:
    - Initial release.

v0.0.2:
    - Use .pm6 as the modules' file extension, not .rakumod, to preserve
      compatibility with older compiler releases.

v0.0.3:
    - Return self from array ops in Data::Record::List.

v0.0.4:
    - Remove redundant gist method candidates from Data::Record::Map and
      Data::Record::Tuple, which prevented the method from being called.

v0.0.5:
    - Fix handling of containers with some array op and private helper methods.

v0.0.6:
    - Implement push and append methods for Data::Record::Map and remove its
      pop, shift, unshift, and prepend methods in order for it to match Hash's
      API.

v0.1.0:
    - Implement structural typings for maps with Data::Record::Map.
    - Fix handling of exceptions in Data::Record::Map when they are resumed.

v0.1.1:
    - Fix handling of exceptions in Data::Record::Map when they are resumed.
    - Move delegate ::?CLASS:D ACCEPTS and raku candidates to
      Data::Record::Instance.

v0.1.2:
    - No changes. This release exists because I screwed up the upload to CPAN.

v0.1.3:
    - Make Data::Record::List array ops 25% faster.
    - Introduce Data::Record::Instance!field-op, which handles an operation on
      a field of a record for all record types.

v0.2.0:
    - Implement support for multi-field lists. This allows flat, repeated lists
      to be typed.
    - Arity exception messages now include the missing field or extraneous
      value in question.

v0.2.1:
    - Fix bug where all record type objects could smartmatch against any
      record.

v0.2.2:
    - Disallow resuming of typechecking exceptions.
    - Fix bug where typechecking exceptions could still be thrown when
      consuming or coercing tuples with record type fields.

v0.2.3:
    - Fix value counting in list iterators.
    - Fix index counting in tuple iterators.
    - Do not strip values that do not typecheck against their corresponding
      fields when consuming or coercing tuples.

v0.2.4:
    - Compatibility updates for upcoming dispatch changes to Rakudo.
    - Make the module's packaging a little easier to read.

v0.2.5:
    - Allow tests to pass with Rakudo v2020.12 and later.

v0.2.6:
    - Point the module auth field to zef:Kaiepi.
